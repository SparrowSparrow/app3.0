exit
reanimation_children[12].select {|a| a == 2}.length
reanimation_children.tenths.select {|a| a == 2}.length
reanimation_children.tenth.select {|a| a == 2}.length
reanimation_children.eight.select {|a| a == 2}.length
reanimation_children.first.select {|a| a == 2}.length
reanimation_children.first.select {|a| a == 2}
reanimation_children.
reanimation_children
exit
reanimation_children
continue
exit
aliens.first.inject(0){|sum,x| sum + x }
children.first.inject(0){|sum,x| sum + x }
exit
children.first[119]
aliens.first[119]
index
continue
children.first[119]
index
mutation_gen
exit
index
mutation_gen
exit
children.first[19]
aliens.first[19]
alien.first[19]
continue
children.first[19]
children[19]
mutation_gen
index
exit
children.first[140]
mutation_gen
separation_gen
continue
exit
aliens.fifth.inject(0){|sum,x| sum + x }
children.fifth.inject(0){|sum,x| sum + x }
children.second.inject(0){|sum,x| sum + x }
aliens.second.inject(0){|sum,x| sum + x }
aliens.first.inject(0){|sum,x| sum + x }
children.first.inject(0){|sum,x| sum + x }
children.first
aliens.first
aliens
exit
continue
children.first
children
exit
continue
population[i]
second_child
first_child
exit
first_child.length
first_child
exit
population[i]
first_child
exit
children.length
children.first
\
children.first
children
continue
children
continue
start_population.first
population_list
exit
user_skills.lenght
coursesCount
generateCount
exit
generateCount
exit
coursesCount
generateCount
i
exit
continue
item[10]
item[61]
Random.rand(model.length)
current_gen
item
continue
exit
population_list
exit
start_population.first
start_population
continue
@user_model_skills
continue
@user_skills.first.id
@user_skills.first
@user_skills
exit
 @user_skills
continue
current_user.id
@current_user
params[:session]
params[:id]
params:id
params
exit
@isMap
exit
params
exit
@user_skills.first
@user_skills
exit
EduProgram.joins(:connection_user_courses).where(:connection_user_courses => {:id_user => params[:id] || 1})
EduProgram.joins(:connection_user_courses).where(:connection_user_courses => {:id_course => params[:id] || 1})
EduProgram.joins(:connection_user_courses)
@user_skills
exit
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight, connection_speciality_courses.id_course , edu_programs.*').where(:connection_speciality_courses => {:id_speciality => params[:id] || 1})
exit
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight,edu_programs.*').where(:connection_speciality_courses => {:id_speciality => params[:id] || 1})
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight,edu_programs.*')..where(:connection_speciality_courses => {:id_speciality => params[:id] || 1})
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight,edu_programs.*').third.weight
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight,edu_programs.*').first.weight
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight,edu_programs.*').first
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.weight,edu_programs.*')
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.*,edu_programs.*')
EduProgram.joins(:connection_speciality_courses).select('connection_speciality_courses.*')
EduProgram.joins(:connection_speciality_courses)
@skills
exit
EduProgram.select('*').includes(:connection_speciality_courses).first
continue
ConnectionSpecialityCourse.options.includes( :weight )
EduProgram.select('*').joins(:connection_speciality_courses).first
EduProgram.joins(:connection_speciality_courses).includes(:weight).first
EduProgram.joins(:connection_speciality_courses).first
EduProgram.joins(:connection_speciality_courses).firts
EduProgram.joins(:connection_speciality_courses)
@skills.first
@skills
